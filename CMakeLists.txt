cmake_minimum_required(VERSION 3.8)
project(manipulation_msgs)

if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
  add_compile_options(-Wall -Wextra -Wpedantic)
endif()

# find dependencies
find_package(ament_cmake REQUIRED)
# uncomment the following section in order to fill in
# further dependencies manually.
# find_package(<dependency> REQUIRED)
find_package(std_msgs REQUIRED)
find_package(geometry_msgs REQUIRED)
find_package(shape_msgs REQUIRED)
find_package(nav_msgs REQUIRED)
find_package(rosidl_default_generators REQUIRED)

if(BUILD_TESTING)
  find_package(ament_lint_auto REQUIRED)
  # the following line skips the linter which checks for copyrights
  # uncomment the line when a copyright and license is not present in all source files
  #set(ament_cmake_copyright_FOUND TRUE)
  # the following line skips cpplint (only works in a git repo)
  # uncomment the line when this package is not in a git repo
  #set(ament_cmake_cpplint_FOUND TRUE)
  ament_lint_auto_find_test_dependencies()
endif()

set(msg_files
  "msg/Map.msg"
  "msg/ControlMode.msg"
  "msg/User.msg"
)

set(action_files
  "action/Gripper.action"
  "action/Pick.action"
  "action/Place.action"
  "action/Move.action"
  "action/Follow.action"
  "action/SimpleRelLoc.action"
  "action/Prepare.action"
  "action/CalibratePointing.action"
  "action/Control.action"
  "action/Trigger.action"
)

set(service_files
)

rosidl_generate_interfaces(${PROJECT_NAME}
  ${msg_files}
  ${service_files}
  ${action_files}
  DEPENDENCIES std_msgs geometry_msgs shape_msgs nav_msgs
)

ament_export_dependencies(rosidl_default_runtime)

ament_package()
